<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python基础练习</title>
      <link href="/2023/02/07/130%E9%81%93python%E7%BB%83%E4%B9%A0/"/>
      <url>/2023/02/07/130%E9%81%93python%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="数据类型篇"><a href="#数据类型篇" class="headerlink" title="数据类型篇"></a>数据类型篇</h1><p> 本篇的练习题旨在考察你对基本数据类型的理解熟悉程度，适合刚接触python的初学者用来巩固对基础知识的理解 </p><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><h3 id="逻辑推理练习（类型转换）"><a href="#逻辑推理练习（类型转换）" class="headerlink" title="逻辑推理练习（类型转换）"></a>逻辑推理练习（类型转换）</h3><p>不运行程序，说出下面程序的执行结果</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1. 4.0 == 4</span><br><span class="line">2. &quot;4.0&quot; == 4</span><br><span class="line">3. bool(&quot;1&quot;)</span><br><span class="line">4. bool(&quot;0&quot;)</span><br><span class="line">5. str(32)</span><br><span class="line">6. int(6.26)</span><br><span class="line">7. float(32)</span><br><span class="line">8. float(&quot;3.21&quot;)</span><br><span class="line">9. int(&quot;434&quot;)</span><br><span class="line">10. int(&quot;3.42&quot;)</span><br><span class="line">11. bool(-1)</span><br><span class="line">12. bool(&quot;&quot;)</span><br><span class="line">13. bool(0)</span><br><span class="line">14. &quot;wrqq&quot; &gt; &quot;acd&quot;</span><br><span class="line">15. &quot;ttt&quot; == &quot;ttt &quot;</span><br><span class="line">16. &quot;sd&quot;*3</span><br><span class="line">17. &quot;wer&quot; + &quot;2322&quot;</span><br></pre></td></tr></table></figure><p>答案如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1. True</span><br><span class="line">2. False</span><br><span class="line">3. True</span><br><span class="line">4. True</span><br><span class="line">5. &#x27;32&#x27;</span><br><span class="line">6. 6</span><br><span class="line">7. 32.0</span><br><span class="line">8. 3.21</span><br><span class="line">9. 434</span><br><span class="line">10. 会报错</span><br><span class="line">11. True</span><br><span class="line">12. False</span><br><span class="line">13. False</span><br><span class="line">14. True</span><br><span class="line">15. False</span><br><span class="line">16. &quot;sdsdsd&quot;</span><br><span class="line">17. &#x27;wer2322&#x27;</span><br></pre></td></tr></table></figure><p>关于这些答案，要做到知其然且知其所以然，编程需要精准的知道每一个细节，下面对其中一些可能让你感到困惑的知识点进行讲解</p><h4 id="bool函数转换规则"><a href="#bool函数转换规则" class="headerlink" title="bool函数转换规则"></a>bool函数转换规则</h4><p>bool函数进行转换时，其结果取决于传入参数与True和False的等价关系，只需记住一点即可</p><p><strong>0 , 空字符串, None在条件判断语句中等价于False, 其他数值都等价于True</strong></p><p>bool函数在做数据类型转换时遵循该原则</p><h4 id="int-“3-42”-为什么会报错"><a href="#int-“3-42”-为什么会报错" class="headerlink" title="int(“3.42”) 为什么会报错"></a>int(“3.42”) 为什么会报错</h4><p>字符串”3.42”可以转成float类型数据3.42, 3.42可以转成int类型数据3，但是字符串”3.42”却不可以直接使用int函数转成3，讲实话，我也觉得这个函数有些不灵活，或许是语言的发明者有自己的考虑吧，咱们对这种问题，不必深究，先做到知道它是什么，将来再去研究为什么</p><h4 id="字符串大小比较规则"><a href="#字符串大小比较规则" class="headerlink" title="字符串大小比较规则"></a>字符串大小比较规则</h4><p>两个字符串在比较大小时，比的不是长度，而是内容</p><p>字符串左对齐后，逐个字符依次比较，直到可以分出胜负</p><h4 id="“sd”-3"><a href="#“sd”-3" class="headerlink" title="“sd”*3"></a>“sd”*3</h4><p>“sd”*3 的意思是sd重复3次，生成一个新的字符串</p><h3 id="数据类型考察"><a href="#数据类型考察" class="headerlink" title="数据类型考察"></a>数据类型考察</h3><p>请说出下面表达式结果的类型</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. &quot;True&quot;</span><br><span class="line">2. &quot;Flase&quot;</span><br><span class="line">3. 4 &gt;= 5</span><br><span class="line">4. 5 </span><br><span class="line">5. 5.0</span><br><span class="line">6. True</span><br></pre></td></tr></table></figure><p>非常简单的送分题</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. str</span><br><span class="line">2. str</span><br><span class="line">3. bool</span><br><span class="line">4. int</span><br><span class="line">5. float</span><br><span class="line">6. bool</span><br></pre></td></tr></table></figure><p>唯一需要解释的是4 &gt;= 5,4比5小，怎么可能大于等于5呢，这是错误的，既然是错的，那么就等于False,False的类型是bool</p><h3 id="交互式解释器练习"><a href="#交互式解释器练习" class="headerlink" title="交互式解释器练习"></a>交互式解释器练习</h3><p>请在交互式解释器里回答下面的题目</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 3的5次方</span><br><span class="line">2. 7对2求模</span><br><span class="line">3. 9除5，要求有小数部分</span><br><span class="line">4. 9除5，要求没有小数部分</span><br><span class="line">5. 用程序计算根号16，也就是16的2分之一次方</span><br></pre></td></tr></table></figure><p>答案如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 3**5</span><br><span class="line">2. 7%2</span><br><span class="line">3. 9/5</span><br><span class="line">4. 9//5</span><br><span class="line">5. import math</span><br><span class="line">   math.sqrt(16)</span><br></pre></td></tr></table></figure><h4 id="知识点讲解"><a href="#知识点讲解" class="headerlink" title="知识点讲解"></a>知识点讲解</h4><ol><li>幂运算用两个<em>， 2的2次方表示为2*</em>2</li><li>求模运算用%， 其实就是求余数，不知道余数的打电话给小学老师</li><li>除法中，希望结果有小数部分时用/， 希望只保留整数部分时用 // ,没啥可解释的，请记住他们的区别，懒得记，就别学编程，编程不适合懒惰的人</li><li>开根号，要用到math模块的sqrt方法，这个题目需要你自己去百度或是谷歌，第一次明确的建议你，一定要好好利用搜索引擎，不会用搜索引擎的程序员，永远是菜鸟</li></ol><h3 id="逻辑推理练习（字符串）"><a href="#逻辑推理练习（字符串）" class="headerlink" title="逻辑推理练习（字符串）"></a>逻辑推理练习（字符串）</h3><p>不用代码，口述回答下面代码的执行结果<br>string = “Python is good”</p><ol><li>string[1:20]</li><li>string[20]</li><li>string[3:-4]</li><li>string[-10:-3]</li><li>string.lower()</li><li>string.replace(“o”, “0”)</li><li>string.startswith(‘python’)</li><li>string.split()</li><li>len(string)</li><li>string[30]</li><li>string.replace(“ “, ‘’)</li></ol><p>答案如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1. &#x27;ython is good&#x27;</span><br><span class="line">2. 报错</span><br><span class="line">3. &#x27;hon is &#x27;</span><br><span class="line">4. &#x27;on is g&#x27;</span><br><span class="line">5. &#x27;python is good&#x27;</span><br><span class="line">6. &#x27;Pyth0n is g00d&#x27;</span><br><span class="line">7. False</span><br><span class="line">8. [&#x27;Python&#x27;, &#x27;is&#x27;, &#x27;good&#x27;]</span><br><span class="line">9. 14</span><br><span class="line">10. 报错</span><br><span class="line">11. &#x27;Pythonisgood&#x27;</span><br></pre></td></tr></table></figure><p>第2题和第10题都报错，是因为超出了索引范围，字符串长度为14，你去20和30的位置取值，当然会报错</p><p>关于切片操作，只需要知道从哪里开始到哪里结束就一定能推导出答案，以string[3:-4]为例，3是开始的位置，-4是结束的位置，但这个范围是左闭右开的，从3开始没错，但不会到-4，而是到-5，更前面的一个位置，python支持负数索引，或者说是反向索引，从右向左从-1开始逐渐减小。</p><p>第一题中，做切片的时候是从1开始，到20结束，即便是右开，直到19，也仍然超出了索引范围，为什么不报错呢，这就是语言设计者自己的想法了，切片时，不论是开始位置还是结束位置，超出索引范围都不会报错，我猜，大概是由于切片是一个范围操作，这个范围内有值就切出来，没值返回空字符串就好了。</p><h2 id="列表与元组练习题"><a href="#列表与元组练习题" class="headerlink" title="列表与元组练习题"></a>列表与元组练习题</h2><h3 id="列表基础考察"><a href="#列表基础考察" class="headerlink" title="列表基础考察"></a>列表基础考察</h3><p>已知一个列表<br>lst = [1,2,3,4,5]</p><ol><li>求列表的长度</li><li>判断6 是否在列表中</li><li>lst + [6, 7, 8] 的结果是什么？</li><li>lst*2 的结果是什么</li><li>列表里元素的最大值是多少</li><li>列表里元素的最小值是多少</li><li>列表里所有元素的和是多少</li><li>在索引1的后面新增一个的元素10</li><li>在列表的末尾新增一个元素20</li></ol><p>答案如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. len(lst)</span><br><span class="line">2. 6 in lst</span><br><span class="line">3. [1,2,3,4,5,6,7,8]</span><br><span class="line">4. [1, 2, 3, 4, 5, 1, 2, 3, 4, 5]</span><br><span class="line">5. max(lst)</span><br><span class="line">6. min(lst)</span><br><span class="line">7. sum(lst)</span><br><span class="line">8. lst.insert(1, 10)</span><br><span class="line">9. lst.append(20)</span><br></pre></td></tr></table></figure><p>以上都是对列表基础操作，所用到的每一个函数，列表的每一个方法，都是需要你熟记于心的</p><h3 id="修改列表"><a href="#修改列表" class="headerlink" title="修改列表"></a>修改列表</h3><p>lst = [1, [4, 6], True]<br>请将列表里所有数字修改成原来的两倍</p><p>答案如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst[0] = 2</span><br><span class="line">lst[1][0] = 4</span><br><span class="line">lst[1][1] = 12</span><br></pre></td></tr></table></figure><p>你以为存在一个函数，其功能便是将列表里所有的数据都变成原来的两倍，这样才显得变成语言是一个非常神奇的东西，但是很遗憾的告诉你，那些神奇的东西都是程序员自己实现的。</p><p>想要修改列表里的数据，必须通过索引对其重新赋值，上面的方法很low，你也可以写一个函数来实现这个功能，我们假设要处理的列表里只int,float,bool,和list数据，不管嵌套基层list，这个函数都应该能正确处理，下面是一段示例代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">double_list</span>(<span class="params">lst</span>):</span><br><span class="line">    <span class="keyword">for</span> index, item <span class="keyword">in</span> <span class="built_in">enumerate</span>(lst):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(item, <span class="built_in">bool</span>):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(item, (<span class="built_in">int</span>, <span class="built_in">float</span>)):</span><br><span class="line">            lst[index] *= <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(item, <span class="built_in">list</span>):</span><br><span class="line">            double_list(item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    lst = [<span class="number">1</span>, [<span class="number">4</span>, <span class="number">6</span>], <span class="literal">True</span>]</span><br><span class="line">    double_list(lst)</span><br><span class="line">    <span class="built_in">print</span>(lst)</span><br></pre></td></tr></table></figure><h3 id="元组概念考察"><a href="#元组概念考察" class="headerlink" title="元组概念考察"></a>元组概念考察</h3><p>写出下面代码的执行结果和最终结果的类型</p><ol><li>(1, 2)*2</li><li>(1, )*2</li><li>(1)*2</li></ol><p>答案如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. (1, 2, 1, 2)</span><br><span class="line">2. (1, 1)</span><br><span class="line">3. 2</span><br></pre></td></tr></table></figure><p>第一题应该没有异议，关键是第2题和第3题，元组里只有一个数据时，必须有逗号，如果没有逗号，就变成了第3题的形式，第3题本质上是1*2,那对小括号就如同我们小学学过的小括号一样，只是为了体现运算优先级而已。</p><p>当元组只有一个数据时，如果不省略了逗号，那么小括号的作用就不再是表示元组，而是表示运算优先级</p><h3 id="合并列表"><a href="#合并列表" class="headerlink" title="合并列表"></a>合并列表</h3><p>lst = [1,2,3]<br>lst2 = [4,5,6]<br>不使用 + 号运算符，将lst2合并到lst的末尾，并思考，这个过程中，是否产生了新的列表</p><p>答案</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lst.extend(lst2)</span><br></pre></td></tr></table></figure><p>这个过程中不会产生新的列表，最直观的检验方式就是print(id(lst)),合并前后，lst的内存地址都没有发生变化，只是列表里的内容发生了变化</p><h3 id="合并字符串"><a href="#合并字符串" class="headerlink" title="合并字符串"></a>合并字符串</h3><p>str1 = “1,2,3”<br>str2 = “4,5,6”<br>请将str2合并到str1的末尾，并思考，这个过程中，是否产生了新的字符串</p><p>答案</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str1 += str2</span><br></pre></td></tr></table></figure><p>这个过程中，产生的新的字符串，字符串是不可变对象，从字面上理解，似乎str1的内容发生变化了，但本质上是产生了新的字符串并赋值给str1， print(str1)， 合并前后的内存地址是不一样的</p><h3 id="统计练习"><a href="#统计练习" class="headerlink" title="统计练习"></a>统计练习</h3><p>列表lst 内容如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure><p>请写程序完成下列题目</p><ol><li>找出列表里的最大值</li><li>找出列表里的最小值</li><li>找出列表里最大值的个数</li><li>计算列表里所有元素的和</li><li>计算列表里元素的平均值</li><li>计算列表的长度</li><li>找出元素6在列表中的索引</li></ol><p>答案</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. max(lst)</span><br><span class="line">2. min(lst)</span><br><span class="line">3. lst.count(max(lst))</span><br><span class="line">4. sum(lst)</span><br><span class="line">5. sum(lst)/float(len(lst))</span><br><span class="line">6. len(lst)</span><br><span class="line">7. lst.index(6)</span><br></pre></td></tr></table></figure><p>这道题考察的是你对内置函数的理解和运用</p><p>下面的题目不允许写代码，仅凭思考来回答</p><ol><li>lst[2:4] 的值是什么</li><li>lst[1: -3]的值是什么</li><li>lst[-5]的值是什么</li><li>lst[:-4] 的值是什么</li><li>lst[-4:] 的值是什么</li></ol><p>这个题目主要考察你对列表切片操作的理解</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. [6, 7]</span><br><span class="line">2. [5, 6, 7, 8, 9]</span><br><span class="line">3. 8</span><br><span class="line">4. [2, 5, 6, 7, 8]</span><br><span class="line">5. [9, 2, 9, 9]</span><br></pre></td></tr></table></figure><p>列表的切片操作，最关键的一点在于左闭右开，结束位置的数据不会列入结果中</p><h3 id="列表操作练习"><a href="#列表操作练习" class="headerlink" title="列表操作练习"></a>列表操作练习</h3><p>列表lst 内容如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure><p>请写程序完成下列操作</p><ol><li>在列表的末尾增加元素15</li><li>在列表的中间位置插入元素20</li><li>将列表[2, 5, 6]合并到lst中</li><li>移除列表中索引为3的元素</li><li>翻转列表里的所有元素</li><li>对列表里的元素进行排序，从小到大一次，从大到小一次</li></ol><p>答案</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. lst.append(15)</span><br><span class="line">2. lst.insert(len(lst)//2, 20)</span><br><span class="line">3. lst.extend([2, 5, 6])</span><br><span class="line">4. lst.remove(lst[3])</span><br><span class="line">5. lst = lst[::-1]</span><br><span class="line">6. lst.sort()   lst.sort(reverse=True)</span><br></pre></td></tr></table></figure><h3 id="复杂列表练习"><a href="#复杂列表练习" class="headerlink" title="复杂列表练习"></a>复杂列表练习</h3><p>列表lst 内容如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, [<span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>]]]</span><br></pre></td></tr></table></figure><p>不写任何代码，仅凭思考来回答下列问题</p><ol><li>列表lst的长度是多少</li><li>列表lst中有几个元素</li><li>lst[1] 的数据类型是什么</li><li>lst[3]的数据类型是什么</li><li>lst [3] [4] 的值是什么</li><li>如果才能访问到 9 这个值</li><li>执行lst[3] [4].append([5, 6])后，列表lst的内容是什么，手写出来</li><li>lst[-1] [-1] [-2]的值是什么</li><li>lst[-2]的值是什么</li><li>len(lst[-1]) 的值是什么</li><li>len(lst [-1] [-1])的值是什么</li><li>lst [-1] [1:3] 的值是什么</li><li>lst [-1] [-1] [1:-2]的值是什么</li></ol><p>第1题和第2题其实是一个意思，原本统计列表里数据个数不是什么难事，可一旦出现了嵌套列表的情况，有人就分不清了，列表里的数据是以逗号分隔的，lst[3] 是一个列表，其余都是int类型数据，因此lst的长度是4</p><p>第3题，lst[1] = 4,是int类型数据<br>第4题，lst[3] 的数据类型是列表<br>第5题，lst[3]的值是[1, 3, 5, 6, [8, 9, 10, 12]]，仍然是一个列表，其索引为4的数据是[8, 9, 10, 12]，是列表<br>第6题，lst[3] [4] [1]<br>第7题，[1, 4, 5, [1, 3, 5, 6, [8, 9, 10, 12, [5, 6]]]],参考5，6两个题目的解答<br>第8题，lst[-1]的值是[1, 3, 5, 6, [8, 9, 10, 12]]， 再次取索引为-1的数据为[8, 9, 10, 12]，取索引为-2的数据为10<br>第9题，5<br>第10题，5<br>第11题，4<br>第12题， [3, 5]， lst[-1]的值是[1, 3, 5, 6, [8, 9, 10, 12]]<br>第13题，[9]， lst[-1] [-1]的值是[8, 9, 10, 12]，切片起始位置索引是1，值为9，结束位置是-2，值为10，由于左闭右开，最终结果是[9]</p><div class="tip warning faa-horizontal animated-hover"><p>本网站只是搬运工，资源均来自互联网，如有侵权请联系删除，站长不会以此获取任何利益!</p></div>    ]]></content>
      
      
      <categories>
          
          <category> python🤣 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> resource </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图标合集</title>
      <link href="/2023/02/07/icon/"/>
      <url>/2023/02/07/icon/</url>
      
        <content type="html"><![CDATA[<h1 id="图标合集"><a href="#图标合集" class="headerlink" title="图标合集"></a>图标合集</h1><div class="tabs" id="icon"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#icon-1">笑脸</button></li><li class="tab"><button type="button" data-href="#icon-2">头像</button></li><li class="tab"><button type="button" data-href="#icon-3">饰品</button></li><li class="tab"><button type="button" data-href="#icon-4">蛋糕</button></li><li class="tab"><button type="button" data-href="#icon-5">车辆</button></li><li class="tab"><button type="button" data-href="#icon-6">爱心</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="icon-1"><p>😀😁😂🤣😃😄😅😆😉😊😋😎😍😘🥰😗😙😚☺🙂🤗🤩🤔<br>🤨😐😑😶🙄😏😣😥😮🤐😯😪😫🥱😴😌😛😜😝🤤😒😓😔😕<br>🙃🤑😲☹🙁😖😞😟😤😢😭😦😧😨😩🤯😬😰😱🥵🥶😳 🤪😵🥴😠😡🤬😷🤒🤕🤢🤮🤧😇🥳🥺🤡🤠🤥🤫🤭🧐<br>🤓😈👿👹👺💀☠👻👽👾🤖💩😺😸😹😻😼😽🙀😿😾🐱‍👤🐱‍🏍<br>🐱‍💻🐱‍🐉🐱‍👓🐱‍🚀🙈🙉🙊🐵🐶🐺🐱🦁🐯🦒🦊🦝🐮🐷🐗🐭🐹<br>🐰🐻🐨🐼🐸🦓🐴🦄🐔🐲🐽🐾🐒🦍🦧🦮🐕‍🦺🐩🐕🐈🐅🐆🐎🦌<br>🦏🦛🐂🐃🐄🐖🐏🐑🐐🐪🐫🦙🦘🦥🦨🦡🐘🐁🐀🦔🐇🐿🦎<br>🐊🐢🐍🐉🦕🦖🦦🦈🐬🐳🐋🐟🐠🐡🦐🦑🐙🦞🦀🐚🦆🐓🦃🦅🕊<br>🦢🦜🦩🦚🦉🐦🐧🐥🐤🐣🦇🦋🐌🐛🦟🦗🐜🐝🐞🦂🕷🕸🦠🧞<br>‍♀️🧞‍♂️🗣👤👥👁👀🦴🦷👅👄🧠🦾🦿👣🤺⛷🤼‍♂️🤼‍♀<br>👯‍♂️👯‍♀️💑👩‍❤️‍👩👨‍❤️‍👨💏👩‍❤️‍💋‍👩👨‍❤ ️<br>💋‍ 👨👪👨‍👩‍👦👨‍👩‍👧👨‍👩‍👧‍👦👨‍👩‍👦‍👦👨‍👩‍👧‍👧👨‍👨‍👦👨‍👨‍👧👨<br>‍👨‍👧‍👦👨‍👨‍👦‍👦👨‍👨‍👧‍👧👩‍👩‍👦👩‍👩‍👧👩‍👩‍👧‍👦👩‍👩‍👦‍👦👩‍👩‍👧‍👧<br>👩‍👦👩‍👧👩‍👧‍👦👩‍👦‍👦👩‍👧‍👧👨‍👦👨‍👧👨‍👧‍👦👨‍👦‍👦👨‍👧‍👧👭<br>👩🏻‍🤝‍👩🏻👩🏼‍🤝‍👩🏻👩🏼‍🤝‍👩🏼👩🏽‍🤝‍👩🏻👩🏽‍🤝‍👩🏼👩🏽‍🤝‍👩🏽👩🏾‍🤝‍👩🏻👩🏾‍🤝‍👩🏼👩🏾‍🤝‍👩🏽👩🏾‍🤝‍👩🏾👩🏿‍🤝‍👩🏻<br>👩🏿‍🤝‍👩🏼👩🏿‍🤝‍👩🏽👩🏿‍🤝‍👩🏾👩🏿‍🤝‍👩🏿👫👩🏻‍🤝‍🧑🏻👩🏻‍🤝‍🧑🏼👩🏻‍🤝‍🧑🏽👩🏻‍🤝‍🧑🏾👩🏻‍🤝‍🧑🏿<br>👩🏼‍🤝‍🧑🏻👩🏼‍🤝‍🧑🏼👩🏼‍🤝‍🧑🏽👩🏼‍🤝‍🧑🏾👩🏼‍🤝‍🧑🏿👩🏽‍🤝‍🧑🏻👩🏽‍🤝‍🧑🏼👩🏽‍🤝‍🧑🏽 👩🏽‍🤝<br>‍🧑🏾👩🏽‍🤝‍🧑🏿👩🏾‍🤝‍🧑🏻👩🏾‍🤝‍🧑🏼👩🏾‍🤝‍🧑🏽👩🏾‍🤝‍🧑🏾👩🏾‍🤝‍🧑🏿👩🏿‍🤝‍🧑🏻 👩🏿 ‍🤝‍🧑🏼👩🏿‍🤝‍🧑🏽👩🏿‍🤝‍🧑🏾<br>👩🏿‍🤝‍🧑🏿👬👨🏻‍🤝‍👨🏻👨🏼‍🤝‍👨🏻👨🏼‍🤝‍👨🏼👨🏽‍🤝‍👨🏼👨🏽‍🤝‍👨🏻 👨🏽‍🤝‍👨🏽👨🏾‍🤝‍👨🏻👨🏾‍🤝‍👨🏼👨🏾‍🤝‍👨🏽👨🏾‍🤝‍👨🏾👨🏿‍🤝‍👨🏻👨🏿‍🤝‍👨🏼👨🏿‍🤝‍👨🏽👨🏿‍🤝‍👨🏾👨🏿‍🤝‍👨🏿</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="icon-2"><p>👩👨🧑👧👦🧒👶👵👴🧓👩‍🦰👨‍🦰👩‍🦱👨‍🦱👩‍🦲👨‍🦲👨‍🦳👱‍♀️<br>👱‍♂️👸🤴👳‍♀️👳‍♂️👲🧔👼🤶🎅👮‍♀️👮‍♂️🕵️‍♀️🕵️‍♂️💂‍♀️<br>💂‍♂️👷‍♀️👷‍♂️👩‍⚕️👨‍⚕️👩‍🎓👨‍🎓👩‍🏫👨‍🏫👩‍⚖️👨‍⚖️<br>👩‍🌾👨‍🌾👩‍🍳👨‍🍳👩‍🔧👨‍🔧👩‍🏭👨‍🏭👩‍💼👨‍💼👩‍🔬👨‍🔬👩‍💻👨‍💻👩‍🎤👨‍🎤👩<br>‍🎨👨‍🎨👩‍✈️👨‍✈️👩‍🚀👨‍🚀👩‍🚒👨‍🚒🧕👰🤵🤱🤰🦸‍♀️🦸‍♂️🦹‍♀️🦹‍♂️<br>🧙‍♀️🧙‍♂️🧚‍♀️🧚‍♂️🧛‍♀️🧛‍♂️🧜‍♀️🧜‍♂️🧝‍♀️🧝‍♂️🧟‍♀️🧟‍♂️🙍‍♀️<br>🙍‍♂️🙎‍♀️🙎‍♂️🙅‍♀️🙅‍♂️🙆‍♀️🙆‍♂️🧏‍♀️🧏‍♂️💁‍♀️<br>💁‍♂️🙋‍♀️🙋‍♂️🙇‍♀️🙇‍♂️🤦‍♀️🤦‍♂️🤷‍♀️🤷‍♂️<br>💆‍♀️💆‍♂️💇‍♀️💇‍♂️🧖‍♀️🧖‍♂️🤹‍♀️🤹‍♂️👩‍🦽👨‍🦽👩‍🦼<br>👨‍🦼👩‍🦯👨‍🦯🧎‍♀️🧎‍♂️🧍‍♀️🧍‍♂️🚶‍♀️🚶‍♂️🏃‍♀️🏃‍♂️💃🕺<br>🧗‍♀️🧗‍♂️🧘‍♀️🧘‍♂️🛀🛌🕴🏇🏂🏌️‍♀️🏌️‍♂️🏄‍♀️🏄‍♂️🚣‍♀️<br>🚣‍♂️🏊‍♀️🏊‍♂️🤽‍♀️🤽‍♂️🤾‍♀️🤾‍♂️⛹️‍♀️⛹️‍♂️<br>🏋️‍♀️🏋️‍♂️🚴‍♀️🚴‍♂️🚵‍♀️🚵‍♂️🤸‍♀️🤸‍♂️🤳💪🦵🦶<br>👂🦻👃🤏👈👉☝👆✌✌🤞🖖🤘🤙🖐✋👌👍👎✊👊🤛🤜🤚👋✍🤟👏👐🙌🤲🙏🤝💅</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="icon-3"><p>🎈🎆🎇🧨✨🎉🎊🎃🎄🎋🎍🎎🎏🎐🎑🧧🎀🎁🎗🎟🎫🎠🎡🎢🎪🎭🖼🎨<br>🧵🧶🛒👓🕶🦺🥽🥼🧥👔👕👖🩳🧣🧤🧦👗🥻👘👚👜👑⚾⚽🏓🏉<br>🏈🥅🥏🪁🎯🥇🥈🥉🏅🎖🏆🎰🕹🎮🪀🎴📢♥🔔♣♠🎸🎺🎷🎶🎵🔑🔐🔏🔓<br>⚒🛠🧪⚗🩸🧲🔫🖲🗿🔋💽🔍🔎📼📔📓📒📃📜📄📑📰📙📚📩📤📥📦📫<br>📪📬📭📁📂🗂🖌✒🗒📅📆🗓📎⌛⏳⌚⏰⏱⏲🗃✂📐🗑📍📌📋📊📉📈📇</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="icon-4"><p>🍕🍔🍟🌭🧂🍿🥓🥚🍳🧇🥞🧈🍞🥐🥨🥯🥙🥪🌮🌯🥫🍖🍗🥩🍠 🥠<br>🥡🍱🍚🍛🍜🦪🍣🍤🍥🥮🍢🧆🥘🍲🍝🥣🍧🍦🍨🍩🍪🎂🍰🧁🍫🍬🍭<br>🍡🍮🍯🍼🥛🧃☕🍵🧉🍶🍾🍷🍸🍹🍺🍻🥂🥃🧊🥤🥢🍴🥄🏺🥝🥥🍇🍈🍉<br>🍊🍌🍋🍍🥭🍎🍏🍐🍑🍒🍓🍅🍆🌽🌶🍄🥑🥒🥬🥦🥔🧄🧅🥕🌰🥜💐🌸🏵<br>🌹🌺🌻🌼🌷🥀☘🌱🌲🌳🌴🌵🌾🌿🍀🍁🍂🍃</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="icon-5"><p>🚗🚓🚕🛺🚙🚌🚎🚒🚚🚛🚜🚘🚔🚖🚍🦽🦼🛹🚲🛴🛵🏍🚄🚅🚈🚝🚞<br>🚃🚋🚆🛩🚉🪂🚊✈🚇🛫🚟🛬🚠💺🚡🚁🚀🚂🛸🛰⛵🚤🛥⛴🛳🚢⚓🌎🌏<br>🛤🏕🗺🏞🧭🛣🏔🏖⛰🏜🌋🏝🗻🏚🏙🏘🏗🏛🕋🕌🛕🕍⛩⛪去🏰🏯🗼🌉<br>🛁🌝🌤⛈⛅☁🌩🌨🌧🌦🌥🌜🌞⭐🌟🌈🌀🌬🌡☄🌠☔🌊⛱⚡❄☃⛄🔥</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="icon-6"><p>❤🧡💛💚💙💜🤎🖤🤍💔❣💕💞💓💗💖💘💝💟💌💥💤💦💨💫🕳💯🔅🔆⚜<br>〽❓❔❗❕〰➰✔💲💱➕➖✖➗💭🗯💬🗨👁‍🗨🕐🕑🕒🕧🕦🕥🕤🕝🕟🕠🕡🕢</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tip warning faa-horizontal animated-hover"><p>本网站只是搬运工，资源均来自互联网，如有侵权请联系删除，站长不会以此获取任何利益!</p></div>        ]]></content>
      
      
      <categories>
          
          <category> 黑科技🤣 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> resource </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python基础练习</title>
      <link href="/2023/02/07/python%E7%BB%83%E4%B9%A0/"/>
      <url>/2023/02/07/python%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="数据类型篇"><a href="#数据类型篇" class="headerlink" title="数据类型篇"></a>数据类型篇</h1><p> 本篇的练习题旨在考察你对基本数据类型的理解熟悉程度，适合刚接触python的初学者用来巩固对基础知识的理解 </p><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><h3 id="逻辑推理练习（类型转换）"><a href="#逻辑推理练习（类型转换）" class="headerlink" title="逻辑推理练习（类型转换）"></a>逻辑推理练习（类型转换）</h3><p>不运行程序，说出下面程序的执行结果</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1. 4.0 == 4</span><br><span class="line">2. &quot;4.0&quot; == 4</span><br><span class="line">3. bool(&quot;1&quot;)</span><br><span class="line">4. bool(&quot;0&quot;)</span><br><span class="line">5. str(32)</span><br><span class="line">6. int(6.26)</span><br><span class="line">7. float(32)</span><br><span class="line">8. float(&quot;3.21&quot;)</span><br><span class="line">9. int(&quot;434&quot;)</span><br><span class="line">10. int(&quot;3.42&quot;)</span><br><span class="line">11. bool(-1)</span><br><span class="line">12. bool(&quot;&quot;)</span><br><span class="line">13. bool(0)</span><br><span class="line">14. &quot;wrqq&quot; &gt; &quot;acd&quot;</span><br><span class="line">15. &quot;ttt&quot; == &quot;ttt &quot;</span><br><span class="line">16. &quot;sd&quot;*3</span><br><span class="line">17. &quot;wer&quot; + &quot;2322&quot;</span><br></pre></td></tr></table></figure><p>答案如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1. True</span><br><span class="line">2. False</span><br><span class="line">3. True</span><br><span class="line">4. True</span><br><span class="line">5. &#x27;32&#x27;</span><br><span class="line">6. 6</span><br><span class="line">7. 32.0</span><br><span class="line">8. 3.21</span><br><span class="line">9. 434</span><br><span class="line">10. 会报错</span><br><span class="line">11. True</span><br><span class="line">12. False</span><br><span class="line">13. False</span><br><span class="line">14. True</span><br><span class="line">15. False</span><br><span class="line">16. &quot;sdsdsd&quot;</span><br><span class="line">17. &#x27;wer2322&#x27;</span><br></pre></td></tr></table></figure><p>关于这些答案，要做到知其然且知其所以然，编程需要精准的知道每一个细节，下面对其中一些可能让你感到困惑的知识点进行讲解</p><h4 id="bool函数转换规则"><a href="#bool函数转换规则" class="headerlink" title="bool函数转换规则"></a>bool函数转换规则</h4><p>bool函数进行转换时，其结果取决于传入参数与True和False的等价关系，只需记住一点即可</p><p><strong>0 , 空字符串, None在条件判断语句中等价于False, 其他数值都等价于True</strong></p><p>bool函数在做数据类型转换时遵循该原则</p><h4 id="int-“3-42”-为什么会报错"><a href="#int-“3-42”-为什么会报错" class="headerlink" title="int(“3.42”) 为什么会报错"></a>int(“3.42”) 为什么会报错</h4><p>字符串”3.42”可以转成float类型数据3.42, 3.42可以转成int类型数据3，但是字符串”3.42”却不可以直接使用int函数转成3，讲实话，我也觉得这个函数有些不灵活，或许是语言的发明者有自己的考虑吧，咱们对这种问题，不必深究，先做到知道它是什么，将来再去研究为什么</p><h4 id="字符串大小比较规则"><a href="#字符串大小比较规则" class="headerlink" title="字符串大小比较规则"></a>字符串大小比较规则</h4><p>两个字符串在比较大小时，比的不是长度，而是内容</p><p>字符串左对齐后，逐个字符依次比较，直到可以分出胜负</p><h4 id="“sd”-3"><a href="#“sd”-3" class="headerlink" title="“sd”*3"></a>“sd”*3</h4><p>“sd”*3 的意思是sd重复3次，生成一个新的字符串</p><h3 id="数据类型考察"><a href="#数据类型考察" class="headerlink" title="数据类型考察"></a>数据类型考察</h3><p>请说出下面表达式结果的类型</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. &quot;True&quot;</span><br><span class="line">2. &quot;Flase&quot;</span><br><span class="line">3. 4 &gt;= 5</span><br><span class="line">4. 5 </span><br><span class="line">5. 5.0</span><br><span class="line">6. True</span><br></pre></td></tr></table></figure><p>非常简单的送分题</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. str</span><br><span class="line">2. str</span><br><span class="line">3. bool</span><br><span class="line">4. int</span><br><span class="line">5. float</span><br><span class="line">6. bool</span><br></pre></td></tr></table></figure><p>唯一需要解释的是4 &gt;= 5,4比5小，怎么可能大于等于5呢，这是错误的，既然是错的，那么就等于False,False的类型是bool</p><h3 id="交互式解释器练习"><a href="#交互式解释器练习" class="headerlink" title="交互式解释器练习"></a>交互式解释器练习</h3><p>请在交互式解释器里回答下面的题目</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 3的5次方</span><br><span class="line">2. 7对2求模</span><br><span class="line">3. 9除5，要求有小数部分</span><br><span class="line">4. 9除5，要求没有小数部分</span><br><span class="line">5. 用程序计算根号16，也就是16的2分之一次方</span><br></pre></td></tr></table></figure><p>答案如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 3**5</span><br><span class="line">2. 7%2</span><br><span class="line">3. 9/5</span><br><span class="line">4. 9//5</span><br><span class="line">5. import math</span><br><span class="line">   math.sqrt(16)</span><br></pre></td></tr></table></figure><h4 id="知识点讲解"><a href="#知识点讲解" class="headerlink" title="知识点讲解"></a>知识点讲解</h4><ol><li>幂运算用两个<em>， 2的2次方表示为2*</em>2</li><li>求模运算用%， 其实就是求余数，不知道余数的打电话给小学老师</li><li>除法中，希望结果有小数部分时用/， 希望只保留整数部分时用 // ,没啥可解释的，请记住他们的区别，懒得记，就别学编程，编程不适合懒惰的人</li><li>开根号，要用到math模块的sqrt方法，这个题目需要你自己去百度或是谷歌，第一次明确的建议你，一定要好好利用搜索引擎，不会用搜索引擎的程序员，永远是菜鸟</li></ol><div class="tip warning faa-horizontal animated-hover"><p>本网站只是搬运工，资源均来自互联网，如有侵权请联系删除，站长不会以此获取任何利益!</p></div>    ]]></content>
      
      
      <categories>
          
          <category> python🤣 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> resource </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>资源合集</title>
      <link href="/2023/02/07/resource/"/>
      <url>/2023/02/07/resource/</url>
      
        <content type="html"><![CDATA[<div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">公考</button></li><li class="tab"><button type="button" data-href="#test4-2">考研</button></li><li class="tab"><button type="button" data-href="#test4-3">Chat-Gpt🤖️</button></li><li class="tab"><button type="button" data-href="#test4-4">☭HPPU️☭</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><div class="table-container"><table><thead><tr><th>名称</th><th>资源</th></tr></thead><tbody><tr><td>百度网盘群号(国考/联考(已更新))</td><td>568836385</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><div class="table-container"><table><thead><tr><th>名称</th><th>资源</th></tr></thead><tbody><tr><td>金榜题名</td><td><a href="http://qzbltushu.ysepan.com/">http://qzbltushu.ysepan.com/</a></td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><div class="table-container"><table><thead><tr><th>名称</th><th>资源</th></tr></thead><tbody><tr><td>chat-Gpt4</td><td><a href="https://aitegpt.com/?inviter=407574065152">https://aitegpt.com/?inviter=407574065152</a></td></tr><tr><td>chat-Gpt3</td><td><a href="https://xingluo.fun/#/">https://xingluo.fun/#/</a></td></tr><tr><td>医疗助手大模型</td><td><a href="http://110.43.208.196:20047/">http://110.43.208.196:20047/</a></td></tr><tr><td>共享ChatGPT账号</td><td><a href="https://chat-shared2.zhile.io/shared.html">https://chat-shared2.zhile.io/shared.html</a></td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><div class="table-container"><table><thead><tr><th>名称</th><th>资源</th></tr></thead><tbody><tr><td>文本分析小工具</td><td><a href="https://weiboanalysis.streamlit.app/">https://weiboanalysis.streamlit.app/</a></td></tr><tr><td>公式识别器</td><td><a href="https://p2t.behye.com/">https://p2t.behye.com/</a></td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tip warning faa-horizontal animated-hover"><p>本网站只是搬运工，资源均来自互联网，如有侵权请联系删除，站长不会以此获取任何利益!</p></div>        ]]></content>
      
      
      <categories>
          
          <category> 黑科技🤣 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> resource </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/12/30/hello-world/"/>
      <url>/2022/12/30/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> HELLO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站第一步 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
